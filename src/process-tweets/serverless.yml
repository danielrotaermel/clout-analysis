service: clout-analysis-backend

frameworkVersion: '>=1.30.1'

stage: dev
region: eu-central-1

custom:
  twitter2kinesis-arn: 'arn:aws:kinesis:us-east-1:525842372805:stream/twitter' # specify your kinesis stream

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    PERIODIC_CLOUT_REPORTS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-periodic-clout-reports
    TRUMPS_ENRICHED_TWEETS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-trumps-enriched-tweets
    OTHER_TWEETS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-other-tweets
    TRUMPS_TWEETS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-trumps-tweets

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource:
        - Fn::GetAtt:
            - TrumpsTweetsDynamoDbTable
            - Arn
        - Fn::GetAtt:
            - OtherTweetsDynamoDbTable
            - Arn
        - Fn::GetAtt:
            - TrumpsEnrichedTweetsDynamoDbTable
            - Arn
        - Fn::GetAtt:
            - PeriodicCloutReportsDynamoDbTable
            - Arn
    - Effect: 'Allow'
      Action:
        - 'kinesis:*'
      Resource: ${self:custom.twitter2kinesis-arn}

  #
  # - arn:aws:dynamodb:us-east-1:525842372805:table/clout-analysis-backend-dev-other-tweets
  # - arn:aws:dynamodb:us-east-1:525842372805:table/clout-analysis-backend-dev-periodic-clout-reports
  # - arn:aws:dynamodb:us-east-1:525842372805:table/clout-analysis-backend-dev-trumps-enriched-tweets
  # - arn:aws:dynamodb:us-east-1:525842372805:table/clout-analysis-backend-dev-trumps-tweets
  # - 'arn:aws:dynamodb:${self:provider.environment.PERIODIC_CLOUT_REPORTS_TABLE}'
  # - 'arn:aws:dynamodb:${self:provider.environment.TRUMPS_ENRICHED_TWEETS_TABLE}'
  # - 'arn:aws:dynamodb:${self:provider.environment.OTHER_TWEETS_TABLE}'
  # - 'arn:aws:dynamodb:${self:provider.environment.TRUMPS_TWEETS_TABLE}'

# service wide environment variables
# environment:
#   variable1: value1

functions:
  preprocess:
    handler: preprocess.preprocess
    events:
      - stream:
          type: kinesis
          arn: ${self:custom.twitter2kinesis-arn}
          batchSize: 10
          startingPosition: LATEST
          enabled: true
  postprocess:
    handler: postprocess.postprocess
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt: [TrumpsEnrichedTweetsDynamoDbTable, StreamArn]
          batchSize: 1
          startingPosition: LATEST
          enabled: true
  periodicCloutReports:
    handler: periodicCloutReports.periodicCloutReports
    events:
      - schedule:
          name: enrichTweets
          description: 'runs every 20 minutes'
          rate: rate(20 minutes)
          enabled: true

#    Define function environment variables here
#    environment:
#      variable2: value2

resources:
  Resources:
    TrumpsTweetsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: day
            AttributeType: S
          - AttributeName: timestamp_ms
            AttributeType: S
        KeySchema:
          - AttributeName: day
            KeyType: HASH
          - AttributeName: timestamp_ms
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.TRUMPS_TWEETS_TABLE}

    OtherTweetsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: day
            AttributeType: S
          - AttributeName: timestamp_ms
            AttributeType: S
        KeySchema:
          - AttributeName: day
            KeyType: HASH
          - AttributeName: timestamp_ms
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.OTHER_TWEETS_TABLE}

    TrumpsEnrichedTweetsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: day
            AttributeType: S
          - AttributeName: timestamp_ms
            AttributeType: S
        KeySchema:
          - AttributeName: day
            KeyType: HASH
          - AttributeName: timestamp_ms
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.TRUMPS_ENRICHED_TWEETS_TABLE}
        StreamSpecification:
          StreamViewType: NEW_IMAGE

    # DataTableStream:
    #   Type: AWS::Lambda::EventSourceMapping
    #   Properties:
    #     BatchSize: 1
    #     Enabled: True
    #     EventSourceArn:
    #       Fn::GetAtt: [TrumpsEnrichedTweetsDynamoDbTable, StreamArn]
    #     FunctionName:
    #       Fn::GetAtt: [postprocess, Arn]
    #     StartingPosition: LATEST

    PeriodicCloutReportsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: day
            AttributeType: S
          - AttributeName: timestamp_ms
            AttributeType: S
        KeySchema:
          - AttributeName: day
            KeyType: HASH
          - AttributeName: timestamp_ms
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PERIODIC_CLOUT_REPORTS_TABLE}
